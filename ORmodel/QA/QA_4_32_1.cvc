X_0, X_1, X_2, X_3 : BITVECTOR( 32 );
Q: BITVECTOR( 32 );
Y : BITVECTOR( 32 );
A_0, A_1, A_2, A_3 : BITVECTOR( 32 );
ASSERT( X_0 = 0bin00011010000101001011101101100100);
ASSERT( X_1 = 0bin01101011000001001001000000101101);
ASSERT( X_2 = 0bin10110011000001101110001011000011);
ASSERT( X_3 = 0bin01011100110011011000101111011100);
ASSERT( Y = 0bin01101011000001001001000000101101);
ASSERT( A_0 = 0bin11111111111111111111111111111111 OR A_0 = 0bin00000000000000000000000000000000);
ASSERT( A_1 = 0bin11111111111111111111111111111111 OR A_1 = 0bin00000000000000000000000000000000);
ASSERT( A_2 = 0bin11111111111111111111111111111111 OR A_2 = 0bin00000000000000000000000000000000);
ASSERT( A_3 = 0bin11111111111111111111111111111111 OR A_3 = 0bin00000000000000000000000000000000);
ASSERT( A_0 & A_1 = 0bin00000000000000000000000000000000 );
ASSERT( A_0 & A_2 = 0bin00000000000000000000000000000000 );
ASSERT( A_0 & A_3 = 0bin00000000000000000000000000000000 );
ASSERT( A_1 & A_2 = 0bin00000000000000000000000000000000 );
ASSERT( A_1 & A_3 = 0bin00000000000000000000000000000000 );
ASSERT( A_2 & A_3 = 0bin00000000000000000000000000000000 );
ASSERT(  Q = BVXOR( A_0 & X_0, BVXOR( A_1 & X_1, BVXOR( A_2 & X_2, A_3 & X_3 ) ) ));
ASSERT(  Y = Q );
QUERY(FALSE);
COUNTEREXAMPLE;
